on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  DEPLOYMENT_MANIFEST_PATH: ./TimeApi2/k8s/*.yaml

jobs:
  buildImage:
    environment: dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.

    steps:
      - uses: actions/checkout@v4

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Fetch secrets from Key Vault
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ secrets.KEYVAULT_NAME }}
          secrets: 'DOCKERHUBUSERNAME'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: TimeApi2/Dockerfile
          push: true
          tags: michalwochna/test:latest

      - name: Upload k8s manifests
        uses: actions/upload-artifact@v4
        with:
          name: manifests
          path: TimeApi2/k8s/*.yaml

  deploy:
    environment: dev
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      - name: Download manifests
        uses: actions/download-artifact@v5
        with:
          name: manifests
          path: ./_artifacts/manifests
          
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'
      - name: test
        run: echo ${{ env.DEPLOYMENT_MANIFEST_PATH }}
      
      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.RESOURCE_GROUP }}
          cluster-name: ${{ vars.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ./_artifacts/manifests/**
          images: michalwochna/timeapi2:latest
